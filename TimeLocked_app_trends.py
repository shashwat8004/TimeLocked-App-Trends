# -*- coding: utf-8 -*-
"""Nulll class Task2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KOfRkNyeUd2ey0DJ-PSNin6gDM_-mvWS
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objects as go
from datetime import datetime
import pytz

# Load dataset
df = pd.read_csv("googleplaystore.csv")

"""# Interactive Chart"""
# Convert "Last Updated" to datetime
df["Last Updated"] = pd.to_datetime(df["Last Updated"], errors="coerce")

# Convert "Size" to numeric (handling 'M' and 'k' values)
def convert_size(size):
    if isinstance(size, str):
        if "M" in size:
            return float(size.replace("M", "")) * 1_000_000
        elif "k" in size:
            return float(size.replace("k", "")) * 1_000
    return pd.NA

df["Size"] = df["Size"].apply(convert_size)
df.dropna(subset=["Size"], inplace=True)
df["Size"] = df["Size"].astype(float)

# Convert "Reviews" to numeric
df["Reviews"] = pd.to_numeric(df["Reviews"], errors="coerce")

# **Apply Filters**
df_filtered = df[
    (df["Rating"] >= 4.0) &
    (df["Size"] >= 10_000_000) &
    (df["Last Updated"].dt.month == 1)
]

# Group by Category & aggregate
top_categories = df_filtered.groupby("Category").agg(
    {"Reviews": "sum", "Rating": "mean"}
).reset_index()

# Select top 10 categories by total installs
top_categories = top_categories.nlargest(10, "Reviews")

# Rename columns
top_categories.rename(columns={"Reviews": "Total Reviews", "Rating": "Average Rating"}, inplace=True)

# **Check if we are in the correct time window (3PM-5PM IST)**
india_tz = pytz.timezone("Asia/Kolkata")
current_time = datetime.now(india_tz).time()
show_graph = 15 <= current_time.hour < 17

if show_graph:
    # **Create Grouped Bar Chart using Plotly**
    fig = go.Figure()

    # **Total Reviews - Red**
    fig.add_trace(go.Bar(
        x=top_categories["Category"],
        y=top_categories["Total Reviews"],
        name="Total Reviews",
        marker_color="red",
        text=top_categories["Total Reviews"],
        textposition="outside",
        hoverinfo="x+y"
    ))

    # **Average Rating - Blue (Bar added & scaled for better visibility)**
    fig.add_trace(go.Bar(
        x=top_categories["Category"],
        y=top_categories["Average Rating"] * 1_000_000,  # Scale to match review count
        name="Average Rating (Scaled)",
        marker_color="blue",
        text=top_categories["Average Rating"].round(1),
        textposition="outside",
        hoverinfo="x+y"
    ))

    # **Layout Settings**
    fig.update_layout(
        title="Top 10 App Categories by Installs (Filtered)",
        xaxis_title="App Categories",
        yaxis_title="Metric Value (Reviews & Scaled Ratings)",
        barmode="group",
        template="plotly_dark",
        hovermode="x"
    )

    # **Show Graph**
    fig.show()
else:
    print("This chart is available only between 3PM-5PM IST.")